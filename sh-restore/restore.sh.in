#!/bin/bash

# restore a backup to a directory
# try to be as smart of dump.sh

prefix=@prefix@
exec_prefix=@exec_prefix@

usage() {
        echo "$PROGNAME [OPTIONS] [+DAY] FRM_DIRECTORY TO_DIRECTORY"
        echo 
        echo "This is a wrapper around rdup and rorrim.sh"
        echo
        echo NAME - suffix for filelist and timestamp files
        echo DIR \ - directories to back up
        echo
        echo OPTIONS:
        echo " -z         compress all files"
        echo " -k KEYFILE encrypt all files"
        echo " -h         this help"
        echo " -V         print version"
}

version() {
        echo "$PROGNAME: @PACKAGE_VERSION@ (rdup-utils)"
}

d=`date +%Y%m`
PROGNAME=$0
gzip=0
KEYFILE=""
monthday=0
frm_dir=""
to_dir=""

_echo2() {
        echo "** $PROGNAME: $1" > /dev/fd/2
}

while getopts ":k:zhV" o; do
        case $o in
                k) KEYFILE=$OPTARG;;
                z) gzip=1;;
                V) version && exit;;
                h) usage && exit;;
                \?) _echo2 "Invalid option"; usage && exit;;
        esac
done
shift $((OPTIND - 1))

# +DAY argument
if [[ $1 =~ "\\+(.+)" ]]; then
        monthday=${BASH_REMATCH[1]}
        if [[ ! $monthday =~ "[0-9]+" ]]; then
                _echo2 "+DAY must be numerical"
                exit 1
        fi
        frm_dir=$2
        to_dir=$3
else
        # no monthday argument
        frm_dir=$1
        to_dir=$2
fi
if [[ -z "$frm_dir" || -z "$to_dir" ]]; then
        _echo2 "Need both directory arguments"
        exit 1
fi
if [[ ! -d "$frm_dir" ]]; then
        _echo2 "Cannot restore from \`$frm_dir'"
        exit 1
fi
if [[ $monthday -lt 0 || $monthday -gt 31 ]]; then
        _echo2 "+DAY out of bounds [0..31]"
        exit 1
fi
if [[ ! -d "$to_dir" ]]; then
        _echo2 "Cannot restore to \`$to_dir'"
        exit 1
fi

if [[ -z "$KEYFILE" ]]; then
        if [[ $gzip -eq 0 ]]; then
                @sbindir@/rdup -n /dev/null "$frm_dir" | @sbindir@/rorrim.sh "$to_dir"
        else 
                @sbindir@/rdup -n -c /dev/null "$frm_dir" | @sbindir@/gzip.sh -d | \
                @sbindir@/rorrim.sh -c "$to_dir"
        fi
else
        if [[ $gzip -eq 0 ]]; then
                @sbindir@/rdup -n -c /dev/null "$frm_dir" | @sbindir@/crypt.sh -d  $KEYFILE | \
                @sbindir@/rorrim.sh -c "$to_dir"
        else 
                @sbindir@/rdup -n -c /dev/null "$frm_dir" | @sbindir@/crypt.sh -d $KEYFILE | \ 
                @sbindir@/gzip.sh -d | @sbindir@/rorrim.sh -c "$to_dir"
        fi
fi
