1/ TO BUILD

Run: autoconf && ./configure && make
(Tested on Linux)

As of version 0.0.2 getdelim is used, which is a GNUism, therefor
compilation on FreeBSD fails, also see TODO.

2/ DOCUMENTATION

rdup is a utility inspired by rsync and the plan9 way of doing
backups. rdup it self does not backup anything, it only print
a list of absolute filenames to standard output. Auxilary scripts are
needed that act on this list and implement the backup strategy.  This
way rdup can be kept lean and mean. Current the (stripped) rdup
executable measures 12KB and I don't expect that to increase much.

The manual page explains rdup's options and usage. See rdup(8).

The filelist as printed starts with the root of the filedump and
then decends into directories. This way all top level directories
can be created as is and in sequence. If you process the file in
the same order no magic foo is needed to create directories that
otherwise might be missing.

2.1/ FULL DUMP

Run: rdup FILELIST dir1

Every directory, file and symlink in dir1 will be printed to stdout,
like this:
+33152 1000 1000 0 /home/miekg/svn/rdup/trunk/bin/.svn/.nobackup
+33216 1000 1000 528 /home/miekg/svn/rdup/trunk/bin/svnlog
+33216 1000 1000 441 /home/miekg/svn/rdup/trunk/bin/zlog
+33216 1000 1000 131 /home/miekg/svn/rdup/trunk/bin/zzz
+33152 1000 1000 0 /home/miekg/svn/rdup/trunk/bin/zzzzzz

Which says everything is new, that's the + sign in the first column.
Next to that is the st_mode field of lstat(2), which holds the type
of the file (dir, regular or symlink) and the protection bits.
Then we find the numeric user id and numeric group id. Then the
filesize in bytes and as last the there is the pathname.

To do a real backup you can use:
rdup FILELIST dir | ./backup.sh /vol/backup/

'backup.sh' is a shell script which looks at the filetype and acts
accordingly. It copies the content (of the dir/symlink) to the archive
directory, it creates a mirror of the actual disk layout of the
directories to be backed up. By default it will put the files
in /vol/backup/YYYYMM.

2.2/ INCREMENTAL DUMP

Just run the rdup FILELIST dir1 | ./backup.sh /vol/backup/ again. This
will use the contents of FILELIST and will only print the changed files.

If we were not piping the output to 'backup.sh' we would see:
-33152 0 0 0 bin/blaat
+16832 1000 1000 4096 bin/.svn

Saying that 'bin/blaat' is to be removed. bin/.svn is always printed
because that is a directory.

3/ AND NOW FOR SOME FUN

Note: the examples given here are simplified, you cannot use a simple
command, but need to use differentiate between directories, regular
files and symbolic links. See the example script 'backup.sh' for an
implementation.

You want gzipped backups?
for i in `rdup FILELIST /home`; do
        cat $i | gzip -c > /vol/backup/$i
done

You want encrypted backups?
for i in `rdup FILELIST /home`; do 
        cat $i | mcrypt -F -k 'secret' -a blowfish --mode stream  > /vol/backup/$i
done

You want encrypted/gzipped backups?
for i in `rdup FILELIST /home`; do
        cat $i | gzip -c | \ 
        mcrypt -F -k 'secret' -a blowfish --mode stream  > /vol/backup/$i
done

You want a gzipped tar file of your files?
rdup FILELIST /home > tar_list && \
tar --create --T list -z --file myhostbackup.tar.gz

You want to exclude certain files?
for i in `rdup FILELIST /home | grep -v \*.bak`; do 
         cat $i > /vol/backup/$i
done

You want to include certain files?
for i in `rdup FILELIST /home | grep important`; do 
         cat $i > /vol/backup/$i
done

You want to dump your files on a remote machine?
rdup FILELIST /home > list
rsync --files-from=list user@remotehost.nl

As in true unix tradition the list can go on and on :-)

4/ BACKUP SCHEME SCRIPTS
The directory mirror/ contains a few scripts which implement a mirroring
backup scheme. I'm using these scripts at home to backup my machines.
Other backup schemes may be implemented using these scripts as an
example.

5/ END USER TOOLS
rdup includes a few scripts:

o backup - this mirrors/copies the files to their final destination
o excl   - exclude certain files and directories from the backup
o yesterday - look at the backupped files and restore them
o hist      - look at the backup history of files

The last 2 are end user tools that can (and should) be used by users on
your system to retrieve lost files. Or they may want to use them to look
at the differences.
