# source this file to get some common
# used functions in the rdup-utils.

# show the version of the tool
version() {
        echo "$PROGNAME: @PACKAGE_VERSION@ (rdup-utils)"
}

# cleanup any stuff and exit
cleanup() {
        _echo2 "Signal received while processing \`$path', exiting"
        if [[ ! -z $TMPDIR ]]; then
                rm -rf $TMPDIR
        fi
        unlock /var/lock/rdup
        exit 1
}

# echo to standard error
_echo2() {
        echo "** $PROGNAME: $1" >&2
}

# find out what kind of snapshot to make
what() {
    _DAYS=$1
    _BACKUPDIR=$2
    _NOW=$3
    i=1
    if [[ -d $_BACKUPDIR/$_NOW ]]; then
	    # already there do not link
	    return 0
    fi
    # linux thing
    while [[ $i -le $_DAYS ]]; do
	# calculate back from the date in _NOW
	    if $hour; then
		dir=`date +%Y%m/%d/%H --date "$i hours ago"`
		mon=`date +%Y%m/%d`
	    else
		dir=`date +%Y%m/%d --date "$i days ago"`
		mon=`date +%Y%m`
	    fi
	    if [[ -d $_BACKUPDIR/$dir ]]; then
		    # copy 'em over
		    _echo2 "Linking dir: \`$_BACKUPDIR/$dir'"
		    # create dir to be safe
		    if ! mkdir -p $_BACKUPDIR/$mon; then
			return 2
		    fi
		    # it can be the case that we may also need to
		    # create the directories leading up to $_NOW
		    if ! mkdir -p $_BACKUPDIR/$(dirname $_NOW); then
			return 2
		    fi
		    if ! cp -plr $_BACKUPDIR/$dir $_BACKUPDIR/$_NOW; then
			return 2
		    fi
		    return 0
	    fi
    (( i++ ))
    done
    return 1
}

# create ~/.rdup
create_rdup() {
	if [[ ! -d $1 ]]; then
		mkdir $1
	fi
	return 0
}

lock() {
        (umask 222; echo "Backup locked by PID: $$" >"$1" ) ||
                (cat "$1" ; echo "aborting..." ; exit 1)
        [ $? = 0 ] || exit 1
}

unlock() {
        rm -f "$1"
}
