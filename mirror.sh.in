#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# This script implement a mirroring backup scheme

. @sysconfdir@/rdup/mshared.sh

mirror_defines
mirror_cmd_options $@
alg="blowfish"

if [[ ! -z $keyfile ]]; then
        if [[ ! -z $gzip ]]; then
                echo "** Options -z and -k can not be mixed"
                exit 1
        fi
        if [[ ! -f $keyfile ]]; then
                echo "** Can not open key file"
                exit 1
        fi
fi

mirror_dirdate
mirror_create_top $backupdir

declare -a path # catch spacing in the path
while read mode uid gid size path
do
        dump=${mode:0:1}                # to add or remove
        mode=${mode:1}                  # st_mode bits
        bits=$(($mode & $S_MMASK))      # permission bits
        bits=`printf "%o" $bits`        # and back to octal again
        typ=0
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1;
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2;
        fi
        
        [[ $verbose -eq 1 ]] && echo $path > /dev/fd/2

        if [[ $dump == "+" ]]; then
                # add
                case $typ in
                        0)      # REG
                        if [[ -f "$backupdir/$path" ]]; then
                                suffix=`mirror_suffix $backupdir/$path`
                                mv "$backupdir/$path" "$backupdir/$path$suffix"
                        fi
                        if [[ $gzip -eq 1 ]]; then
                                cat "$path" | gzip -c > "$backupdir/$path"
                        elif [[ ! -z $keyfile ]]; then
                                mcrypt -F -k "$keyfile" -a "$alg" --mode stream "$path" > "$backupdir/$path"
                        else 
                                cat "$path" > "$backupdir/$path"
                        fi
                        chown $uid:$gid "$backupdir/$path"
                        chmod $bits "$backupdir/$path"
                        ftsize=$(($ftsize + $size))
                        ireg=$(( $ireg + 1))
                        ;;
                        1)      # DIR
                        [[ ! -d "$backupdir/$path" ]] && mkdir -p "$backupdir/$path"
                        chown $uid:$gid "$backupdir/$path"
                        chmod $bits "$backupdir/$path"
                        idir=$(($idir + 1))
                        ;;
                        2)      # LNK
                        if [[ -L "$backupdir/$path" ]]; then
                                suffix=`mirror_suffix $backupdir/$path`
                                mv "$backupdir/$path" "$backupdir/$path$suffix"
                        fi
                        cp -a "$path" "$backupdir/$path"
                        chown $uid:$gid "$backupdir/$path"
                        chmod $bits "$backupdir/$path"
                        ilnk=$(($ilnk + 1))
                        ;;
                esac
        else
                # remove. It could be the stuff is not there, don't
                # error on that.
                if [[ -e "$backupdir/$path" ]]; then
                        suffix=`mirror_suffix $backupdir/$path`
                        mv "$backupdir/$path" "$backupdir/$path$suffix"
                fi
                irm=$(($irm + 1))
        fi
done 
mirror_ok
