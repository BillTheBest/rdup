#ifndef _RDUP_H
#define _RDUP_H

#include <glib.h>

#include "config.h"

#ifndef HAVE_DIRFD
#define rdup_dirfd(d) ((d)->dd_fd)
#endif

#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <unistd.h>
#include <string.h>
#include <ctype.h>
#include <pwd.h>
#include <grp.h>
#include <time.h>
#include <glob.h>
#include <fcntl.h>
#include <signal.h>
#include <dirent.h>
#include <libgen.h>
#include <syslog.h>
#include <errno.h>
#include <regex.h>
#include <utime.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/wait.h>

#ifdef HAVE_ATTR_XATTR_H
#include <attr/xattr.h>
#endif /* HAVE_ATTR_XATTR_H */

#define VERSION     "@PACKAGE_VERSION@"
#define PROGNAME    "@PACKAGE_NAME@"

#define BUFSIZE         4096
#define NOBACKUP        ".nobackup"
#define NULL_DUMP       0
#define DIR_SEP         '/'
#define VALUE           (void*)1 /* g_tree_lookup returns this in rdup */
#define NO_PRINT        (void*)2 /* don't print values with this flag */
#define D_STACKSIZE    100

#define SHA1_LEN       20 /* bytes of digest */
#define NO_SHA         "0000000000000000000000000000000000000000"

#define LIST_MINSIZE   6
#define LIST_SPACEPOS  5

/* extended attributes */
#define ATTR_SIZE       10
#define R_MAX_ID        2147483646  /* 2 ^ 31 - 2 */

#define F_PERM          07777

struct entry {
        char *f_name;
        size_t f_name_size;
        uid_t f_uid;
        gid_t f_gid;
        mode_t f_mode;
        time_t f_ctime;
        off_t f_size;
	dev_t f_dev;
	ino_t f_ino;
};

struct substract {
        GTree *d; /* diff */
        GTree *b;
};

struct remove_path {
        GTree *tree;
        size_t len;
        char *path;
};

/* gfunc.c */
gint gfunc_equal(gconstpointer a, gconstpointer b);
gboolean gfunc_free(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_write(gpointer data, gpointer value, gpointer fp);
gboolean gfunc_backup(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_remove(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_new(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_substract(gpointer data, gpointer value, gpointer diff);
gboolean gfunc_remove_path(gpointer data, gpointer value, gpointer path);
gboolean gfunc_regexp(GSList *l, char *n);
/* rdup.c */
void msg(const char *fmt, ...);
/* getdelim.c */
ssize_t rdup_getdelim(char **lineptr, size_t *n, int delim, FILE *stream);
/* signal.c */
void signal_abort(int signal);
#endif  /* _RDUP_H */
