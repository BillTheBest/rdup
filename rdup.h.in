#ifndef _RDUP_H
#define _RDUP_H

#define VERSION     "@PACKAGE_VERSION@"
#define PROGNAME    "@PACKAGE_NAME@"

#include "config.h"

#define BUFSIZE         2048
#define NOBACKUP        ".nobackup"      
#define NULL_DUMP       0
#define DIR_SEP         '/'
#define VALUE           (void*)1 /* g_tree_lookup return this in rdup */
#define F_STACKSIZE    200
#define D_STACKSIZE    100

#define LIST_MINSIZE   6
#define LIST_SPACEPOS  5

struct entry {
        char *f_name;
        uid_t f_uid;
        gid_t f_gid;
        mode_t f_mode;
        time_t f_mtime;
        off_t f_size;
};

struct substract {
        GTree *d; /* diff */
        GTree *b;
};

/* gfunc.c */
gint gfunc_equal(gconstpointer a, gconstpointer b);
gboolean gfunc_free(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_write(gpointer data, gpointer value, gpointer fp);
gboolean gfunc_backup(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_remove(gpointer data, gpointer value, gpointer usr);
gboolean gfunc_substract(gpointer data, gpointer value, gpointer diff);
#if 0
gboolean gfunc_write_all(gpointer data, gpointer value, gpointer fp);
#endif 
#endif  /* _RDUP_H */
