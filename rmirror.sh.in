#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# This script generates a command list
# catch is used to do remote backups
# It uses a slightly different format then what
# rdup output, namely:
# +/-MODE UID GID FILESIZE PATH\nFILECONTENTS
# chown/chgrp is of little pupose as the remote user is 
# likely not to be root. Hide the errors?

. @sysconfdir@/rdup/mshared.sh

mirror_defines
mirror_cmd_options $@
mirror_dirdate
mirror_create_top $backupdir

while read mode uid gid psize fsize
do
        dump=${mode:0:1}        # to add or remove
        mode=${mode:1}          # st_mode bits
        bits=$(($mode & $S_MMASK)) # permission bits
        bits=`printf "%o" $bits` # and back to octal again
        typ=0
        path=`head -c $psize`   # gets the path
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1;
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2;
        fi

        [[ $verbose -eq 1 ]] && echo "$path > /dev/fd/2"
        
        if [[ $dump == "+" ]]; then
                # add
                case $typ in
                        0)      # REG
                        if [[ -f "$backupdir/$path" ]]; then
                                suffix=`mirror_suffix $backupdir/$path`
                                mv "$backupdir/$path" "$backupdir/$path$suffix"
                        fi
                        if [[ $fsize -ne 0 ]]; then
                                # catch
                                head -c $fsize > "$backupdir/$path"
                        else 
                                # empty
                                touch "$backupdir/$path"
                        fi
                        chown $uid:$gid "$backupdir/$path" 2>/dev/null
                        chmod $bits "$backupdir/$path"
                        ftsize=$(($ftsize + $fsize))
                        ireg=$(( $ireg + 1))
                        ;;
                        1)      # DIR
                        # size should be 0
                        [[ ! -d "$backupdir/$path" ]] && mkdir -p "$backupdir/$path"
                        chown $uid:$gid "$backupdir/$path" 2>/dev/null
                        chmod $bits "$backupdir/$path"
                        idir=$(( $idir + 1))
                        ;;
                        2)      # LNK, target is in the content! 
                        if [[ -L "$backupdir/$path" ]]; then
                                suffix=`mirror_suffix $backupdir/$path`
                                mv "$backupdir/$path" "$backupdir/$path$suffix"
                        fi
                        target=`head -c $fsize`
                        ln -sf "$target" "$backupdir/$path" 
                        chown -h $uid:$gid "$backupdir/$path" 2>/dev/null
                        ilnk=$(( $ilnk + 1))
                        ;;
                esac
        else
                echo
                # remove
                if [[ -e "$backupdir/$path" ]]; then
                        suffix=`mirror_suffix $backupdir/$path`
                        mv "$backupdir/$path" "$backupdir/$pathsuffix"
                fi
                irm=$(( $irm + 1))
        fi
done 
rmirror_ok 
