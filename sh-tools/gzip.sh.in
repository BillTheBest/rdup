#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# zip rdup -c's output

prefix=@prefix@
exec_prefix=@exec_prefix@
datadir=@datadir@/rdup
# shared stuff
source $datadir/shared.sh

PROGNAME=$0
# trap at least these
trap cleanup SIGINT SIGPIPE

usage() {
        echo "$PROGNAME [OPTIONS]"
        echo
        echo "Compress or decompress the file's contents"
        echo
        echo OPTIONS:
        echo " -c    ignored as gzip.sh always works on content"
        echo " -d    decompress the files"
        echo " -h    this help"
        echo " -V    print version"
}

_stat_size() {
        case $OSTYPE in
                linux*)
                        echo $(stat --format "%s" "$@")
                ;;
                freebsd*)
                        echo $(stat -f "%z" "$@")
                ;;
        esac
}

while getopts ":cdhV" o; do
        case $o in
                d) OPT="-d";;
                h) usage && exit;;
                V) version && exit;;
                \?) _echo2 "Invalid option" ; usage && exit;;
        esac
done
shift $((OPTIND - 1))

TMPDIR=`mktemp -d "/tmp/rdup.backup.XXXXXX"`
if [[ $? -ne 0 ]]; then
        _echo2 "Mktemp failed" >&2
        exit 1
fi
chmod 700 $TMPDIR

while read -r mode uid gid psize fsize
do
        dump=${mode:0:1}        # to add or remove
        mode=${mode:1}          # st_mode bits
        typ=0
        read -r -n $psize path  # get the path

        sanity_check
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2
        fi
        if [[ $dump == "+" ]]; then
                # add
                case $typ in
                        0)      # REG
                        if [[ $fsize -ne 0 ]]; then
                                # catch
                                dd bs=1 count=$fsize 2>/dev/null | gzip $OPT -c > $TMPDIR/file.$$.gz
                                newsize=$(_stat_size $TMPDIR/file.$$.gz)
                                echo "$dump$mode $uid $gid $psize $newsize"
                                echo -n "$path"
                                cat $TMPDIR/file.$$.gz
                                rm -f $TMPDIR/file.$$.gz
                        else
                                # no content
                                echo "$dump$mode $uid $gid $psize $fsize"
                                echo -n "$path"
                        fi
                        ;;
                        1)      # DIR
                        echo "$dump$mode $uid $gid $psize $fsize"
                        echo -n "$path"
                        ;;
                        2)      # LNK, target is in the content!
                        read -r -n $fsize target
                        echo "$dump$mode $uid $gid $psize $fsize"
                        echo -n "$path"
                        echo -n "$target"
                        ;;
                esac
        else
                # there is no content
                echo "$dump$mode $uid $gid $psize $fsize"
                echo -n "$path"
        fi
done

rm -rf $TMPDIR
exit 0
