#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# grep on rdup's output

set -o nounset

PROGNAME=$0
S_ISDIR=16384   # octal: 040000 (This seems to be portable...)
S_ISLNK=40960   # octal: 0120000
S_MMASK=4095    # octal: 00007777, mask to get permission

_echo2() {
        echo "** $PROGNAME: $1" > /dev/fd/2
}

cleanup() {
        _echo2 "Signal received while processing \`$path', exiting"
        if [[ ! -z $TMPDIR ]]; then
                rm -rf $TMPDIR
        fi
        exit 1
}
# trap at least these
trap cleanup SIGINT SIGPIPE

usage() {
        echo "$PROGNAME [OPTIONS] REGEXP"
        echo
        echo "apply REGEXP on the filename in the list as generated by rdup"
        echo
        echo OPTIONS:
        echo " -c???     todo"
        echo " -f        match files and links (default)"
        echo " -a        match files/links and directories"
        echo " -d        match directories"
        echo " -h        this help"
        echo " -V        print version"        
}

version() {
        echo "$PROGNAME: @PACKAGE_VERSION@ (rdup-utils)"
}

MODE="f" # default to file mode
while getopts ":adfhcV" o; do
        case $o in
                a) MODE="a";;
                d) MODE="d";;
                f) MODE="f";;
                V) version && exit;;
                h) usage && exit;;
                \?) usage && exit;;
        esac
done
shift $((OPTIND - 1))

if [[ $# -eq 0 ]]; then
        _echo2 "Need a regular expression as argument"
        exit 1
fi
REGEXP=$1

declare -a path # catch spacing in the path
while read mode uid gid psize fsize path
do
        dump=${mode:0:1}        
        mode=${mode:1}         
        typ=0
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1;
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2;
        fi

        case $typ in
                0|2)      # reg file or link
                if [[ $MODE != "a" && $MODE != "f" ]]; then 
                        continue
                fi
                if [[ ! "$path" =~ "$REGEXP" ]]; then
                        continue
                fi
                echo "$dump$mode $uid $gid $psize $fsize $path"
                ;;
                1)      # directory
                if [[ $MODE != "a" && $MODE != "d" ]]; then
                        continue
                fi
                if [[ ! "$path" =~ $REGEXP ]]; then
                        continue 
                fi
                echo "$dump$mode $uid $gid $psize $fsize $path"
                ;;
        esac
done 
