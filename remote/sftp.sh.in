#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# This script generates a command list
# sFTP understands. sFTP is then run 
# to remotely copy the files use something like:
# ./rdup FL bin | ./sbackup.sh -b /tmp/storage | sftp -C -b - user@host:

. @sysconfdir@/rdup/shared.sh

backup_defines
backup_cmd_options $@
backup_dirdate
sftpbackup_create_top $backupdir

# be flexible on the persmissions- allow them to fail
# it is hard to check if a file exists on the remote 
# machine, so we always move it... for dirs this might
# be a problem

declare -a path # catch spacing in the path
while read mode uid gid size path
do
        dump=${mode:0:1}        # to add or remove
        mode=${mode:1}          # st_mode bits
        bits=$(($mode & $S_MMASK)) # permission bits
        bits=`printf "%o" $bits` # and back to octal again
        typ=0
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1;
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2;
        fi
        
        [[ $verbose -eq 1 ]] && echo "$path > /dev/fd/2"

        if [[ $dump == "+" ]]; then
                # add
                case $typ in
                        0)      # reg file
                        # if it's there rename it
                        echo -rename "$backupdir/$path" "$backupdir/$path.$suffix"
                        echo put "$path" "$backupdir/$path"
                        #echo -chown $uid "$backupdir/$path"
                        #echo -chgrp $gid "$backupdir/$path"
                        echo -chmod $bits "$backupdir/$path"
                        ;;
                        1)      # directory
                        #echo rename "$backupdir/$path" ## dirs are always included
                        echo -mkdir "$backupdir/$path"
                        #echo -chown $uid "$backupdir/$path"
                        #echo -chgrp $gid "$backupdir/$path"
                        echo -chmod $bits "$backupdir/$path"
                        ;;
                        2)      # link
                        #[ -L "$backupdir/$path" ] && mv "$backupdir/$path" "$backupdir/$path.$suffix"
                        # http://www.bioinspired.com/users/ajg112/computing/bashTips.shtml#symLink
                        LS_OUT=$(ls -l "$path")
                        target=${LS_OUT#*-> }
                        echo symlink "$target" "$backupdir/$path"
                        #echo -chown $uid "$backupdir/$path"
                        #echo -chgrp $gid "$backupdir/$path"
                        echo -chmod $bits "$backupdir/$path"
                        ;;
                esac
        else
                # remove
                echo rename "$backupdir/$path" "$backupdir/$path.$suffix"
        fi
done 
