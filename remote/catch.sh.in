#!/bin/bash
#
# Copyright (c) 2005, 2006 Miek Gieben
# See LICENSE for the license
#
# This script generates a command list
# catch is used to do remote backups
# It uses a slightly different format then what
# rdup output, namely:
# +/-MODE UID GID FILESIZE PATHSIZE\nPATH FILECONTENTS

. shared.sh

backup_defines
backup_cmd_options $@
#sbackup_create_top $backupdir

# be flexible on the persmissions- allow them to fail
# it is hard to check if a file exists on the remote 
# machine, so we always move it... for dirs this might
# be a problem

declare -a path # catch spacing in the path
while read mode uid gid fsize psize
do
        dump=${mode:0:1}        # to add or remove
        mode=${mode:1}          # st_mode bits
        bits=$(($mode & $S_MMASK)) # permission bits
        bits=`printf "%o" $bits` # and back to octal again
        typ=0
        psize=$((psize + 1))   # throw prints to much
        path=`dd bs=$psize count=1 2>/dev/null`
        if [[ $(($mode & $S_ISDIR)) == $S_ISDIR ]]; then
                typ=1;
        fi
        if [[ $(($mode & $S_ISLNK)) == $S_ISLNK ]]; then
                typ=2;
        fi
        
        if [[ $dump == "+" ]]; then
                # add
                case $typ in
                        0)      # reg file
                        # catch the file
                        if [[ $fsize -ne 0 ]]; then
                                dd bs=$fsize count=1 2>/dev/null > /tmp/miekg/`basename $path`
                                # permissions and stuff
                        fi
                        ;;
                        1)      # directory
                        ;;
                        2)      # link
                        ;;
                esac
        else
                echo
                # remove
                #echo rename "$backupdir/$path" "$backupdir/$path.$suffix"
        fi
done 
