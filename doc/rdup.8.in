'\" t
.TH RDUP 8 "24 Dec 2005" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"
.SH NAME
@PACKAGE_NAME@ \- generate a file list suitable for making backups
.SH SYNOPSIS
.B @PACKAGE_NAME@
[
.IR \-N 
timestamp
]
[
.IR OPTIONS
]
.IR FILELIST 
.IR DIRS ...

.SH DESCRIPTION
\fBrdup\fR is a utility inspired by rsync and the plan9 way of doing
backups. \fBrdup\fR itself does not backup anything. It only prints
a list of files that are changed, or all files in case of a null dump.
All paths printed are absolute.
.PP
\fBrdup\fR prints a filelist to standard output. This list is relative
to FILELIST. Subsequent programs in a pipe line can be used to actually
implement to backup scheme. If FILELIST is empty or non existant all
files in DIR are dumped. This is the same as a null dump. After a run
a new FILELIST is written. No warning is given when FILELIST is an
existing file, it just gets overwritten by \fBrdup\fR. New runs will
print out only those files that have actually changed since the last
run, thereby making incremental backups possible.
.PP
Files are checked for changes by comparing the m_time (modification time),
if this time is NEWER than the m_time of FILELIST the pathname is printed
to standard output. All errors are written to standard error.
.PP
The general idea is to be very unix like and create a bunch of simple programs
which each do a their specific thing very well. With \fBrdup\fR and a
small shell script (50 lines) one can implement encrypted and compressed
backups.

.SH OPTIONS
.TP
.B \-h
Give an overview of the options.
.TP
.B \-n
Don't honor .nobackup files. Normally if such files are found the directory is not
printed to standard output, now it is.
.TP
.TP
.B \-F FORMAT
Specify a printf-style format to use. See \fBFORMAT\fR below.
.TP
.B \-N timestamp
use the m_time of file TIMESTAMP as the timestamp to decide what to
include in the incremental backup list. If TIMESTAMP does not exist
of full dump is performed. 
.B rdup
will create TIMESTAMP before it starts printing the file list.
.TP
.B \-V
Print rdup's version.
.TP
.B \-v
Be more verbose. If specified another time, \fBrdup\fR will be even
more verbose.
.TP
.B \-x
Stay on the local filesystem.
.TP
.B \-s SIZE
Only output files smaller then SIZE bytes. This can be used to limit
the amount of data to be transferred when doing a remote backup.
This option \fIonly\fR applies to files and symbolic links, \fInot\fR
to directories.
.TP
.B \-0
Delimit FILELIST with NULL's instead of a newline. Use '\\0' in the
FORMAT string to change \fBrdup\fR's output.

.SH FORMAT
The default format \fBrdup\fR uses is: "%p%m %u %g %l %s %n\\n"
.PP
The following escape sequences are understood by \fBrdup\fR:

        'p': '+' if file is new/modified, '-' if removed
        'm': mode from lstat(2)
        'u': uid 
        'g': gid 
        'l': length of the path name
        's': size of the file/link (zero if directory)
        'n': path 
        't': time of modification (in seconds from epoch)
        'T': 'type' - 'd'/'l'/'-' for directory, link or file.
        'C': the content of the file/link (none for directories)
.PP
To delimit the outout of \fBrdup\fR with NULLs you can use '\\0' in the 
format string.

.SH FILELIST
\fBrdup\fR write the FILELIST in the following format:
        MODE PATH
.PP
Where MODE is the st_mode from stat(2) and PATH is the path of the file. A
typical example is: 
        33216 bin/rdup

.SH OUTPUT FORMAT 
The default output generated by \fBrdup\fR is formatted like:
        +|-MODE UID GID PATH_SIZE FILE_SIZE PATH
.PP
Where:
.TP
.B o +|-
plus or minus, indicating whether PATH should added or removed.
.TP
.B o MODE
the st_mode from stat(2).
.TP
.B o UID
the numerical user id of PATH. Note that if the first character of the
line is '-' (i.e. remove) the UID will be zero.
.TP
.B o GID
the numerical group id of PATH. Note that if the first character of the
line is '-' (i.e. remove) the GID will be zero.
.TP
.B o PATH_SIZE
the size of PATH. Normally this is not needed, but when PATH contains
spaces this can come in handy.
.TP
.B o FILE_SIZE
the size of file pointed to by PATH. Note that if the first character of the line is '-'
(.ie. remove) the SIZE will be zero.
.TP
.B o PATH
the pathname
.PP
A typical example look like this:
        +33216 1000 1000 8 11288 bin/rdup
.PP
This example tells us, that it should be backed up, it has a user id
and group id of 1000, the length of the path is 8 bytes, the size
of the file it 11288 and it has "bin/rdup" as a path.
.PP
Directories are always printed, as the modification time of directories
is not compared.

.SH OUTPUT FORMAT WITH \-c
The output generated by \fBrdup -c\fR is formatted like:
        +|-MODE UID GID PATH_SIZE FILE_SIZE PATH FILE_CONTENTS
.PP
This makes it possible possible for a remote shell script to receive the
actual file and make a backup.
.PP
All field are identical as described in \fBOUTPUT FORMAT\fR, but
there is one extra field and the following cavaets.
.TP
.B o FILE_CONTENTS
The entire file is concatenated to standard output.

.SS CAVAETS
The output when using the \-c is changed as follows, for:
.TP
.B o directories:
the FILE_SIZE is set to zero and no content is printed. Thus:
        +16877 1000 1000 11 0 \fB/home/miekg\fR
.TP
.B o regular files:
the FILE_SIZE is used as-is and the entire file contents
is printed to standard output. Thus:
        +33152 1000 1000 32 6 \fB/home/miekg/svn/rdup/trunk/aaa/a\fR\fIhello\fR

Where \fBaaa/a\fR is a regular file containing the word 'hello\\n'
.TP
.B o symbolic links:
the FILE_SIZE is set to the size of the target name and instead
of printing the file contents the target name is printed. Thus:
        +41471 1000 1000 34 1 \fB/home/miekg/svn/rdup/trunk/aaa/def\fR\fIb\fR

Where \fBaaa/def\fR is a symbolic link that points to 'b'

.SH SCRIPTS
Various shells scripts are included with rdup. These script actually
implement the backup scheme. Currently included are various remote
backup scripts, a local mirroring scheme and an implementation of hdup2

.SH AUTHOR
Written by Miek Gieben. 

.SH REPORTING BUGS
Report bugs to <miek@miek.nl>. 

.SH COPYRIGHT
Copyright (C) 2005, 2006 Miek Gieben. This is free software. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
.PP
Licensed under the GPL. See the file LICENSE in the source distribution
of rdup.
