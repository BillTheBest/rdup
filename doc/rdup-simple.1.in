'\" t
.TH RDUP-SIMPLE 1 "29 Apr 2007" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"

.SH NAME
rdup-simple \- create a hardlink backup

.SH SYNOPSIS
.B rdup-simple
[
.B +DAYS
]
[
.IR OPTIONS
]
DIR|FILE
[
DIR|FILE
]
DESTINATION

.SH DESCRIPTION
\fBrdup-simple\fR is a frontend for `rdup-snap' and `rdup'. It will backup
all directories and files given on the command line. It will create a
hard linked backup directory, where the backup is created.
.PP
With the optional +DAYS argument you can specify how far backup
\fBrdup-simple\fR looks back for previous backups. This should
be a number in the range 1..99. It defaults to 8 days.
.PP
\fBrdup-simple\fR will create the directory `~/.rdup' and will
store its administrative files there. This program does not need
to be run with root permissions.
.PP
The last argument of \fBrdup-simple\fR is used as the destination;
the following destinations are supported:

.TP
.B ssh:///user@host/directory
Use `ssh' as a protocol and `user` as the remote user name. Store
the backup in `directory` on the remote server `host'.

.TP 
.B ssh://host/directory
Use `ssh' as a protocol and the current username as the remote user name. Store
the backup in `directory` on the remote server `host'.

.TP
.B file:///directory
Use `/directory` to store the backup, `file://` is optional. Note: there
are 3 slashes here.
.TP
.B /directory
Use `/directory` to store the backup. 
.TP
.B directory
Use `directory` in the current directory for the backup.

.SS Making a backup
Making a backup is as simple as:

      rdup-simple ~ /adm /vol/backup/$HOSTNAME

.PP
\fB~\fR and \fB/adm\fR are the directories to be backed up. Multiple directories
or files are allowed on the command line.
.PP
The backup will be stored in `/vol/backup/$HOSTNAME`.

.PP
For the backup a YYYYMM directory is created. In this directory
specific day-dumps are placed. So the first dump in October 2006,
will created in 200610/01 and the second in 200610/02, etc.
.PP
You can use incremental dumps for ever, there is no need to do
a full dump every once in a while.
.PP
Note that \fBrdup-simple\fR calls \fBrdup-snap-link\fR. This small
utility will actually hardlink copy the previous backup. The return
value of \fBrdup-snap-link\fR will determine if a full or incremental 
dump will be performed.

.SS Remote backups
Note: for remote backups to work, the receiving machine must have \fBrdup\fR installed.
Also note: there is no colon between the hostname and the directory.
Remote backup will create a pipeline of the form:

rdup \-c \fIDIR|FILE\fR | ssh \fIuser@remotehost\fR rdup-shapshot \-c \-b \fIbackupdir\fR

There is no provisioning for \fBssh\fR so unless you have configured
\fBssh\fR to work without a passphrase you will be asked to supply one.
Also note that the PATH on the remote host should be set in such a way that all
the rdup-util scripts can be found.

.SH OPTIONS
.B \-k keyfile
Encrypt the files while backing up with \fIkeyfile\fR. This option
inserts \fBrdup-crypt keyfile\fR in the pipeline. 
.TP
.B \-a
Enable extended attributes. Write the uid/gid to the extended user
attributes r_uid and r_gid.
.TP
.B \-f
Force a full dump.
.TP
.B \-x
See \-x in rdup(1).
.TP
.B \-z
Compress the files while backing up. This option
inserts \fBrdup-gzip\fR in the pipeline. 
.TP
.B \-v
Echo the files processed to standard error.
.TP
.B \-h
Show a short help message.
.TP
.B \-V
Show the version.

.SH SEE ALSO
rdup(1), rdup-snap-link(1) and rdup-snapshot(1). See rdup-backups(1) for
examples and an introduction into making backups with \fBrdup\fR.
