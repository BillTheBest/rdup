'\" t
.TH RDUP-BACKUPS 1 "28 Oct 2006" "0.6.2" "rdup utils"

.SH NAME
rdup-backups \- introduction into making backups with rdup

.SH INTRODUCTION
\fBrdup\fR is a simple program that prints out a list of files and
directories that are changed changed on a filesystem. It is much
more sophisticated than for instance \fIfind\fR, because \fBrdup\fR
will find files that are removed are directories that are renamed.
By glueing \fBrdup\fR together with a few very simple shell and
perl scripts you can create a simple to understand, but powerfull
backup solution. \fBrdup\fR includes a few utilities to make backups
and restores easy to perform. \fRrdup\fR supports remote, encrypted
and compressed backups (with the right scripts).

A long time ago \fBrdup\fR included a bunch of shell and perl scripts,
currently \fBrdup\fR consists out of three basic utilties:
.TP
.B rdup
With rdup you create the filelist on which later programs in the
pipeline can work. With \fBrdup \fI\-c\fR the file's contents
is also echo-ed to stdout.

.TP
.B rdup-tr
With rdup-tr you can transform (encrypt, compress, whatever...) the
files rdup delivers to you.

.TP 
.B rdup-up
With rdup-up you can update an existing directory stucture with the
updates as describe in the rdup archive. 

With these three tools you can create your own backup solution, see
SNAPHOST BACKUPS later in this document.

.SH BACKUPS AND RESTORES
For \fBrdup\fR there is \fIno\fR difference between backups and
restores. I you think about this a minute you understand why.

Making a backup means copying a list of files somewhere else. Restoring
files is copying a list of files back to the place they came from. Same
difference. So \fBrdup\fR can be used for both, if you did any
transformation with \fBrdup-tr\fR during the backup you just need to
reverse those operations during the restore.

.SH BACKUPS
It is always best to backup to \fIanother\fR medium, be it a different
local harddisk or a NFS/CIFS mounted filesystem or use the remote backup
capabilities to securely copy the backup to another system all together.

If you backup to a local disk you can just as well use \fBrsync\fR or
plain old tar, but if you store your files at somebody else's disk you
will need encryption. This is where you go beyond \fBrsync\fR.
	 

.SH SNAPSHOT BACKUPS


.SH ALSO SEE
rdup(1), rdup-tr(1), rdup-up(1) or http://www.miek.nl/projects/rdup/
