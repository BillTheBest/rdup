'\" t
.TH RDUP-GREP 1 "27 Feb 2006" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"
        
.SH NAME
rdup-grep, filter \- filter files received from \fBrdup -c\fR

.SH SYNOPSIS
.B rdup-grep
.IR REGEXP
[
.IR OPTIONS
]

.SH DESCRIPTION
\fBrdup-grep\fR, filter the output it receives from \fBrdup\fR using
\fIREGEXP\fR. Currently only the pathname is grepped.
.PP
Note: be carefull with your regular expression that you don't filter
away any directories that are needed to put the files in. If these
directories do not exist, the resulting backup will fail.
.PP
\fIREGEXP\fR is a Perl regular expression.
.PP
For example,
.PP
        rdup list ~/Documents | rdup-grep '.*' 

Which will let everything pass.
.PP
        rdup list ~/Docments | rdup-grep -i '50$' 

Will let everything throught that doesn't have "50" as suffix.
.PP
If you want to use \fBrdup-grep\fR to restore from a backup you 
can use the following regular expression:
\fI'\\+\\d\\d.\\d\\d:\\d[\\d$|\\d/]'\fR 

As in:
        rdup /dev/null /vol/backup/myhost | \ \\
        rdup-grep -i '\\+\\d\\d.\\d\\d:\\d[\\d$|\\d/]' | \ \\
        rdup-mirror -b /tmp/RESTORE

This will remove all files and directories with a +DD.HH:MM suffix,
thereby leaving only those files you need to restore to the latest
state of your backup.

.SH OPTIONS
.TP
.B \-c
Accept rdup's -c output. The files' content is \fInot\fR filtered.
.TP
.B \-i
Invert the match. Let everything through that \fIdoes not\fR match.
.TP
.B \-h
Show a short help message.
.TP
.B \-V
Show the version.

.SH SEE ALSO
rdup-gzip(1), rdup-mirror(8) and grep(1).
