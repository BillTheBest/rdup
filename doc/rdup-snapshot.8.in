'\" t
.TH RDUP-SNAPSHOT 8 "02 Oct 2006" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"

.SH NAME
rdup-snapshot \- create a hardlink backup

.SH SYNOPSIS
.B rdup-snapshot
[
.B +DAYS
]
[
.IR OPTIONS
]
DIR|FILE
[
DIR|FILE
]

.SH DESCRIPTION
\fBrdup-snapshot\fR is a frontend for `rdup-snap' and `rdup'. It will backup
all directories and files given on the command line. It will create a
hard linked backup directory, where the backup is created. 
.PP
With the optional +DAYS argument you can specify how far backup
\fBrdup-snapshot\fR looks back for previous backups. This should
be a number in the range 1..99. It defaults to 8 days.
.PP
Making local backups is as simple as:
      rdup-snapshot -b /vol/backup/$HOST ~ 

Also note that rdup-snapshot calls \fBrdup-snap-link\fR. This small
utility will actually hardlink copy the previous backup. The return
value of \fBrdup-snap-link\fR will determine if a full or incremental 
dump will be performed.
.PP
\fB~\fR is the directory to be backed up. Multiple directories
or files are allowed on the command line.
.PP
There is no default backup location. You must specify a \-b argument.
.PP
For the backup a YYYYMM directory is created. In this directory
specific day-dumps are placed. So the first dump in October 2006,
will created in 200610/01 and the second in 200610/02, etc.
.PP
You can use incremental dumps for ever, there is no need to do
a full dump every once in a while.

.SH OPTIONS
.TP 
.B \-b backupdir
The backup directory. This is where the backup is stored

Note that \fBrdup-snapshot\fR will add the string YYYYMM/DD to
the backup directory.
.TP
.B \-n name
The \fIname\fR speficies an optional prefix for the
timestamp and filelist files. These are stored, by default, in
`@sysconfdir@/rdup'.

Normally the filelist and timestamp files are named like this:

$HOSTNAME.`basename DIR`.list and
$HOSTNAME.`basename DIR`.timestamp

where DIR is the first directory or file on the command line. Thus:
\fBrdup-snapshot\fR /home/miekg/bin, will lead to the following names:

elektron.bin.list and
elektron.bin.timestamp
.TP
.B \-c user@remotehost
Restore a backup on a remote host. This will create a pipeline of the
form: 

rdup \-c \fIDIR|FILE\fR | ssh \fIuser@remotehost\fR rdup-shapshot \-c \-b \fIbackupdir\fR

There is no provisioning for \fBssh\fR so unless you have configured
\fBssh\fR to work without a passphrase you will be asked to supply one.
Also note that the PATH on the remote host should be set in such a way that all
the rdup-util scripts can be found.
.TP
.B \-E file
See \-E in rdup(8).
.TP
.B \-k keyfile
Encrypt the files while backing up with \fIkeyfile\fR. This option
inserts \fBrdup-crypt keyfile\fR in the pipeline. 
.TP
.B -l num
Limit the transfer to 'num' bytes/second. This option is given to 
\fBcstream\fR. See the manual page of cstream at the \-t option.
.TP
.B \-a
Enable extended attributes. Write the uid/gid to the extended user
attributes r_uid and r_gid.
.TP
.B \-f
Force a full dump.
.TP
.B \-x
See \-x in rdup(8).
.TP
.B \-z
Compress the files while backing up. This option
inserts \fBrdup-gzip\fR in the pipeline. 
.TP
.B \-e
Store the the timestamp and filelist files together with the backup.
This allows for backups to USB-drives and such. Normally they
are stored in `/etc/rdup'.

This option cannot be used when doing a remote backup.
.TP
.B \-v
Echo the files processed to standard error.
.TP
.B \-h
Show a short help message.
.TP
.B \-V
Show the version.

.SH SEE ALSO
rdup(8), rdup-mirror(8), rdup-snap-link(8) and rdup-snapshot(8). See rdup-backups(8) for
examples and an introduction into making backups with \fBrdup\fR.
