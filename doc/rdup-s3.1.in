'\" t
.TH RDUP-S3 1 "26 May 2008" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"
        
.SH NAME
rdup-s3 \- communicate with Amazon's S3 service 

.SH SYNOPSIS
.B rdup-s3
[
.IR OPTION
]
.B get
|
.B put
|
.B rm
|
.B ls
[
.IR  FILE
]

.SH DESCRIPTION
\fBrdup-s3\fR up- or downloads data from Amazon's S3 storage service.
See http://www.amazon.com/s3 for more information on S3. In short, S3
works with buckets in which you can store objects (files). Accessing S3
requires a key-id (see \-i) and a secret key (see \-k).
When being
run \fBrdup-s3\fR will create the bucket named on the command line, if
it not already exists. 
.PP
For each (daily) backup you can create a bucket or you can put multiple 
files in one bucket. There is a 5 Gigabyte limit on the size of files
you can store on S3. \fBrdup-s3\fR does not automatically split files,
nor does it warn when the file size exceeds this threshold.
.PP
\fBrdup-s3\fR buffers the data it receives on standard input when being
run with the 
.B put
command. After \fIall\fR data is collected it is uploaded. The Perl
interface used doesn't support streaming at the moment.
.PP
When being run with
.B get
an object is downloaded from the named bucket and then written to standard
output.
.PP
When no file is given the command will be performed on the named bucket.
A 

    rdup-s3 -b my_bucket rm

will remove the bucket 'my_bucket'.
.PP
With \fIls\fR you may even omit the bucket name, in that case all the
buckets you have will be listed.
.PP
\fBrdup-s3\fR does not really care what kind of data it uploads, in the
case of \fBrdup\fR it just happens to be \fBrdup -c\fR data.

.SH COMMANDS
.TP 
.B get
Download a file from the named bucket, the file is printed to standard
output, so to actually save it you will need to redirect \fBrdup-s3\fRs output.

.TP 
.B put
Upload a file to the named bucket, the file contents is read from
standard input,
the filename given on the command line is used as the remote name.

.TP 
.B rm
Remove a file from the named bucket, or when no file name is given try
to remove the bucket. This can only be done when the bucket is empty.

.TP 
.B ls
List files from the named bucket or when no bucket has been given list
all know buckets.

.SS Upload (backup)
For example the following will upload your compressed and encrypted
data to Amazon and save it under the name 'backup-home-doc' in the
bucket '20080610'.

    rdup -c list ~/Documents | rdup-gzip | rdup-crypt key | \\
.BR
        rdup-s3 -b 20080610 -i id_file -k key_file \\
.BR
        put backup-home-doc

.PP
Note the \fI-c\fR option for \fBrdup\fR. 

.PP
Or, if you just want to store a file on S3, you can just use

.BR
    cat my-local-file | rdup-s3 -i id_file -k key_file put \\
.BR
    my-remote-file

.SS Download (restore)
And to restore your data from Amazon:

      rdup-s3 -b 20080610 -i id_file -k keyfile get backup-home-doc \\
.BR
      rdup-crypt -d key | rdup-gzip -d | \\
.BR
      rdup-snap -c -b /tmp/tada

You should now be able to find your files in /tmp/tada. Note that the
bucket name (20080610) and the filename (backup-home-doc) should match
with the names used when backing up.

.SH OPTIONS
.TP
.B \-i file
\fIfile\fR contains one line with your id as you got it from Amazon.
.TP
.B \-k file
\fIfile\fR contains one line with your secret key as you got it from Amazon.
.TP
.B \-b bucket
Use \fIbucket\fR as the bucket. If the bucket does not exists it is
created for you.
.TP
.B \-c
This option is ignored, \fBrdup-s3\fR always works on the files'
content.  
.TP
.B \-h
Show a short help message.
.TP
.B \-V
Show the version.

.SH SEE ALSO
rdup(1).
