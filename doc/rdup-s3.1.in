'\" t
.TH RDUP-S3 1 "26 May 2008" "@PACKAGE_VERSION@" "@PACKAGE_NAME@ utils"
        
.SH NAME
rdup-s3 \- communicate with Amazon's S3 service 

.SH SYNOPSIS
.B rdup-s3
[
.IR OPTION
]
.B get
|
.B put
|
.B rm
|
.B ls
.IR  FILE


.SH DESCRIPTION
\fBrdup-s3\fR up- or downloads data from Amazon's S3 storage service.
See http://www.amazon.com/s3 for more information on S3. In short, S3
works with buckets in which you can store objects (files). When being
run \fBrdup-s3\fR will create the bucket named on the command line, if
it not already exists. 
.PP
\fBrdup-s3\fR buffers the data it receives on standard input when being
run with the 
.B put
command. After \fIall\fR data is collected it is uploaded. The Perl
interface used doesn't support streaming at the moment.
.PP
When begin run with
.B get
an object is downloaded from the named bucket and written to standard
output.
.PP
\fBrdup-s3\fR does not really care what kind of data it uploads, in the
case of \fBrdup\fR it just happens to be \fBrdup -c\fR data.

.SS Upload (backup)
For example the following will upload your encrypted and compressed
data to Amazone:

    rdup -c list ~/Documents | rdup-gzip | rdup-crypt key | \\
        rdup-s3 -b my_bucket -i id_file -k key_file put my-backup-20080412

.PP
Note the \fI-c\fR option for \fBrdup\fR. 

.SS Download (restore)
And to restore your data from Amazon:

    rdup-s3 -b my_backup -i id_file -k keyfile get my-backup-20080412 \\
	rdup-crypt -d key | rdup-gzip -d | rdup-snap -c -b /tmp/tada

You should now be able to find your files in /tmp/tada

.SH OPTIONS [TO BE EXPANDED]
.TP
.B \-c
This option is ignored, \fBrdup-s3\fR always works on the files'
content. 
.TP
.B \-h
Show a short help message.
.TP
.B \-V
Show the version.

.SH SEE ALSO
rdup(1).
