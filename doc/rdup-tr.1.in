'\" t
.TH RDUP-TR 1 "27 Nov 2008" "@PACKAGE_VERSION@" "@PACKAGE_NAME@"
.SH NAME
@PACKAGE_NAME@-tr \- transform rdup output
.SH SYNOPSIS
.B @PACKAGE_NAME@-tr
[\fI\-Pcmd,opt1,...,opt7\fR]...
[\fIOPTION\fR]...

.SH DESCRIPTION
Transform rdup output into something else. Where something else can
be a tar, cpio, pax archive or another rdup stream.

The rdup archive must be given on \fBrdup-tr\fR's standard input.

You can select multiple types of output (\-O flag), but you must be aware
that you may loose some information in formats other than \fBrdup\fR's own, see 
the table below.

You may also supply \fBrdup-tr\fR with only a list of pathnames, this can 
be selected with the \-L flag. 

The following table shows what happens with the output depending on the input. 
.BR
.TP 
.B 0
OK
.TP 
.B D
delete information is lost
.TP 
.B H
hardlink information is lost
.BR

.TS
L|L|CC.
    output	tar,cpio,pax	rdup
input	    
-------------	-------------	------
rdup	    D	0
filelist	    DH	H

.TE

.SH OPTIONS
.TP
.B \-L
Select list input format. Normally \fBrdup-tr\fR accepts rdup output,
with this option you can give it a list of path names.
Note: with list input \fBrdup-tr\fR will `stat()` the file.
.TP
.B \-O
Output format. This can be 'tar', 'cpio', 'pax', 'raw' or 'rdup'. It
defaults to 'rdup'. 
.TP
.B \-X \fIkey\fR
Read the encryption key from the file key and encrypt all paths
with Blowfish and this key and iv. After the encryption the binary data is
converted into ascii using an URL safe (Section 4 of RFC 3548)
version of base64 encode.

The encryption key must be on the first line and the key size
must be 16 and 8 bytes for the iv, so 24 in total.
.TP
.B \-Y \fIkey\fR
Read the decryption key from the file key and decrypt all paths
with Blowfish and this key. Before the encryption the paths
are converted to binary by using an URL safe version of base64 decode.
.TP
.B \-c
Force output to the tty. Normally \fBrdup-tr\fR wants to see it's
output redirected.
.TP
.B \-v
Be more verbose. 
.TP
.B \-V
Print rdup-tr's version.
.TP
.B \-h
A short help.

.SH EXAMPLES
The following is possible

    rdup -Pgzip -Pmcrypt,-fKEY,-c /dev/null /home | \\
    rdup-tr -O tar -Xboe | gzip > \\
    my-home-zipped-crypted-pathcrypted-tar.gz

That is: all files under /home are gzipped and encrypted
on a \fIper\fR file basis (first line). Further more, all pathnames are
Blowfish encrypted (second line). This is put in a tar file, which is then
compressed, resulting in the final output (final line).

Creating a compressed and encrypted tar archive out of a full
rdup dump might be done as follows

    rdup -Pgzip -Pmcrypt,-fKEY,-c /dev/null /home | \\
    rdup-tr -O tar > my-home-zipped-and-crypted.tar

Or even pack and unpack it on the fly

    rdup -Pgzip -Pmcrypt,-fKEY,-c /dev/null /home | rdup-tr -Otar | \\
    ssh user@remotehost tar xvCf /tmp -

Or encryption with openssl

    ./rdup -Popenssl,enc,-e,-des-cbc,-k,secret /dev/null /home

Or, compressing with gzip, encrypting with openssl and then compressing
the entire archive yet again

    rdup -Pgzip -Popenssl,enc,-e,-des-cbc,-k,secret /dev/null /home | \\
    gzip > my_compressed_encrypted_rdup_archive.gz

Recreating the original \fBrdup\fR (-c) output, which can be fed to
\fBrdup-up\fR.

# DIT kan dus niet meer, maar heeft nooit echt gewerk BUGBUGBUG

    gunzip -c my_compressed_encrypted_rdup_archive.gz |\\
    rdup-tr -Popenssl,enc,-d,-des-cbc,-k,secret -Pgzip,-d >\\
    my_rdup_archive

Notice the reversal of the \-P options.

.SH EXIT CODE
\fBrdup-tr\fR return a zero exit code on success, otherwise 1 is returned.

.SH AUTHOR
Written by Miek Gieben. 

.SH REPORTING BUGS
Report bugs to <miek@miek.nl>. 

.SH SEE ALSO
http:/www.miek.nl/projects/rdup/ is the main site of rdup. Also see rdup(1),
rdup-up(1) and rdup-backups(7).

.SH COPYRIGHT
Copyright (C) 2005-2010 Miek Gieben. This is free software. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
.PP
Licensed under the GPL version 3. See the file LICENSE in the source distribution
of rdup.
