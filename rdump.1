.TH rdump 1 "24 Dec 2005"
.SH NAME
rdump \- generate a file list suitable for making backups
.SH SYNOPSIS
.B rdump
[
.IR OPTION
]
.IR FILELIST 
.IR DIR...

.SH DESCRIPTION
\fBrdump\fR prints a filelist to standard output. This list is relative
to FILELIST. Subsequent programs in a pipe line can be used to actually
implement to backup scheme. If FILELIST is empty or non existant all
files in DIR are dumped. This is the same as a null dump. After a run
a new FILELIST is written.
.PP
The general idea is to be very unix like and create a bunch of simple programs
which each do a specific their thing very well. With \fBrdump\fR and a
small shell script (50 lines) one can implement encrypted and compressed
backups.

.SH OPTIONS
.TP
\fB\-h
Give an overview of the options.
.TP
\fB\-n
Honor .nobackup files. If such files are found the directory is not
printed to standard output.
.TP
\fB\-v
Be more verbose
.TP
\fB\-V
Print rdump's version.
.TP
\fB\-x
Stay on the local filesystem.
.TP
\fB\-0
Delimit all printed lists with NULL instead of newlines. This also
applies to the FILELIST.

.SH FILELIST
\fBrdump\fR write the FILELIST in the following format:
        MODE PATH
.PP
Where MODE is the st_mode from stat(2) and PATH is the path of the file. A
typical example is: 
        33216 bin/rdump

.SH OUTPUT
The output generated by \fBrdump\fR is formatted like:
        +|-MODE UID GID PATH
.PP
Where:
.TP
.B o +|-
plus or minus, indicating whether PATH should added or removed
.TP
.B o MODE
the st_mode from stat(2).
.TP
.B o UID
the numerical user id of PATH
.TP
.B o GID
the numerical group id of PATH
.TP
.B o PATH
the pathname
.PP
A typical example look like this:
        +33216 1000 1000 bin/rdump

.SH AUTHOR
Written by Miek Gieben. 

.SH REPORTING BUGS
Report bugs to <miek@miek.nl>. 

.SH COPYRIGHT
Copyright (C) 2005, 2006 Miek Gieben. This is free software. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
